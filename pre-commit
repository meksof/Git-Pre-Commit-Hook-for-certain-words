#!/bin/bash
# Author: Nikolaos Dimopoulos
# Based on code by Remigijus Jarmalavičius
# Checks the files to be committed for the presence of print_r(), var_dump() and die()
# The array below can be extended for further checks

checks[1]="!!nocommit!!"
# checks[2]="some_special_string_to_be_catched"

element_count=${#checks[@]}
let "element_count = $element_count + 1"

ROOT_DIR="$(pwd)/"
LIST=$(git status -s --no-renames | grep -e '^\( *M \|?? \|A \)')
ERRORS_BUFFER=""
for file in $LIST
do
    if [ ${#file} -le 3 ]; then
        continue
    fi
	
	index=1
	while [ "$index" -lt "$element_count" ]
	do
		ERRORS=$(grep "${checks[$index]}" $ROOT_DIR$file >&1)
		if [ "$ERRORS" != "" ]; then
			if [ "$ERRORS_BUFFER" != "" ]; then
				ERRORS_BUFFER="$ERRORS_BUFFER\n$ERRORS"
			else
				ERRORS_BUFFER="$ERRORS"
			fi

			echo "${checks[$index]} found in file: $file "
		fi

		let "index = $index + 1"
	done
done
if [ "$ERRORS_BUFFER" != "" ]; then
    echo 
    echo "These errors were found in try-to-commit files: "
    echo -e $ERRORS_BUFFER
    echo 
    echo "Can't commit, fix errors first."
    exit 1
else
    echo "Commited successfully."
fi